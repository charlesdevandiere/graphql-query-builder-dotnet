name: $(GitVersion.FullSemVer)
pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: Release

trigger:
  batch: 'true'
  branches:
    include:
      - master
  paths:
    exclude:
      - docs/*
      - README.md

steps:
  - task: UseGitVersion@5
    displayName: GitVersion
    inputs:
      versionSpec: '5.x'

  - script: dotnet tool restore
    displayName: 'Restore tools'

  - script: dotnet build -c $(buildConfiguration)
    displayName: 'Build'

  - script: dotnet test --no-build -c $(buildConfiguration) --logger xunit -p:CollectCoverage=true -p:CoverletOutputFormat=cobertura -p:Exclude="[*]Shared.Models.*"
    displayName: 'Test'

  - script: dotnet pack ./src/GraphQL.Query.Builder/GraphQL.Query.Builder.csproj --no-build -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/out -p:Version=$(GitVersion.SemVer)
    displayName: 'Pack'

  - task: PublishTestResults@2
    displayName: 'Publish test results'
    inputs:
      testRunner: xUnit
      testResultsFiles: '**/TestResults.xml'

  - script: dotnet tool run reportgenerator -reports:**/coverage.cobertura.xml -targetdir:tests/coverage -reportTypes:Cobertura
    displayName: 'Generate code coverage report'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage'
    inputs:
      codeCoverageTool: cobertura
      summaryFileLocation: '**/Cobertura.xml'

  - publish: $(Build.ArtifactStagingDirectory)/out
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    artifact: out
    displayName: Publish artifact
