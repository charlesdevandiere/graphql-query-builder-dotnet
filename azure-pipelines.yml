name: $(GitVersion.FullSemVer)
pool:
  vmImage: 'windows-2019'

variables:
  buildConfiguration: Release

trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    exclude:
      - docs/*
      - README.md

steps:
  - checkout: self
    clean: true
    persistCredentials: true

  - script: GitVersion /output buildserver
    displayName: GitVersion

  - script: dotnet tool restore
    displayName: 'dotnet tool restore'

  - script: dotnet test -c $(buildConfiguration) --logger xunit -p:CollectCoverage=true -p:CoverletOutputFormat=cobertura -p:Exclude="[*]Shared.Models.*"
    displayName: 'dotnet test'

  - script: dotnet pack .\src\GraphQL.Query.Builder\GraphQL.Query.Builder.csproj -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)\out -p:Version=$(GitVersion.SemVer) --include-symbols
    displayName: 'dotnet pack'

  - task: PublishTestResults@2
    displayName: 'publish test results'
    inputs:
      testRunner: xUnit
      testResultsFiles: '**/TestResults.xml'

  - script: dotnet tool run reportgenerator -reports:**/coverage.cobertura.xml -targetdir:tests/coverage -reportTypes:Cobertura
    displayName: 'generate code coverage report'

  - task: PublishCodeCoverageResults@1
    displayName: 'publish code coverage'
    inputs:
      codeCoverageTool: cobertura
      summaryFileLocation: '**/Cobertura.xml'

  - task: PublishBuildArtifacts@1
    displayName: 'publish artifact'
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)\out
      ArtifactName: out
